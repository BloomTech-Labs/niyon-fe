// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Home /> component testing should render the component correctly 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/home",
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "df9owr",
            "pathname": "/home",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "df9owr",
          "pathname": "/home",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Home>
      <div
        className="home"
        data-test="home-container"
      >
        <Header>
          <div
            className="makeStyles-root-1"
            data-test="header-container"
          >
            <WithStyles(CssBaseline)>
              <CssBaseline
                classes={Object {}}
              />
            </WithStyles(CssBaseline)>
            <WithStyles(ForwardRef(AppBar))
              className="makeStyles-appBar-3"
              position="fixed"
            >
              <ForwardRef(AppBar)
                className="makeStyles-appBar-3"
                classes={
                  Object {
                    "colorDefault": "MuiAppBar-colorDefault",
                    "colorInherit": "MuiAppBar-colorInherit",
                    "colorPrimary": "MuiAppBar-colorPrimary",
                    "colorSecondary": "MuiAppBar-colorSecondary",
                    "colorTransparent": "MuiAppBar-colorTransparent",
                    "positionAbsolute": "MuiAppBar-positionAbsolute",
                    "positionFixed": "MuiAppBar-positionFixed",
                    "positionRelative": "MuiAppBar-positionRelative",
                    "positionStatic": "MuiAppBar-positionStatic",
                    "positionSticky": "MuiAppBar-positionSticky",
                    "root": "MuiAppBar-root",
                  }
                }
                position="fixed"
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <ForwardRef(Paper)
                    className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "outlined": "MuiPaper-outlined",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <header
                      className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed MuiPaper-elevation4"
                    >
                      <WithStyles(ForwardRef(Toolbar))>
                        <ForwardRef(Toolbar)
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                          >
                            <Link
                              to="/"
                            >
                              <LinkAnchor
                                href="/"
                                navigate={[Function]}
                              >
                                <a
                                  href="/"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="logo"
                                    data-test="logo"
                                  />
                                </a>
                              </LinkAnchor>
                            </Link>
                            <div
                              className="title-and-button"
                              data-test="title-and-button"
                            >
                              <WithStyles(ForwardRef(Typography))
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6"
                                  >
                                    Welcome 
                                    !
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </div>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                    </header>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(AppBar)>
            </WithStyles(ForwardRef(AppBar))>
          </div>
        </Header>
        <Connections>
          <div
            className="connections"
            data-test="connections"
          >
            <div
              data-test="second-wrapper"
            >
              <WithStyles(ForwardRef(Paper))
                className="paper"
                elevation={1}
              >
                <ForwardRef(Paper)
                  className="paper"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={1}
                >
                  <div
                    className="MuiPaper-root paper MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <h1
                      className="container-header"
                      data-test="my-connections"
                    >
                      My Connections (Sum)
                    </h1>
                    <div>
                      <WithStyles(ForwardRef(AppBar))
                        color="default"
                        position="static"
                      >
                        <ForwardRef(AppBar)
                          classes={
                            Object {
                              "colorDefault": "MuiAppBar-colorDefault",
                              "colorInherit": "MuiAppBar-colorInherit",
                              "colorPrimary": "MuiAppBar-colorPrimary",
                              "colorSecondary": "MuiAppBar-colorSecondary",
                              "colorTransparent": "MuiAppBar-colorTransparent",
                              "positionAbsolute": "MuiAppBar-positionAbsolute",
                              "positionFixed": "MuiAppBar-positionFixed",
                              "positionRelative": "MuiAppBar-positionRelative",
                              "positionStatic": "MuiAppBar-positionStatic",
                              "positionSticky": "MuiAppBar-positionSticky",
                              "root": "MuiAppBar-root",
                            }
                          }
                          color="default"
                          position="static"
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorDefault"
                            component="header"
                            elevation={4}
                            square={true}
                          >
                            <ForwardRef(Paper)
                              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorDefault"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              component="header"
                              elevation={4}
                              square={true}
                            >
                              <header
                                className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorDefault MuiPaper-elevation4"
                              >
                                <WithStyles(ForwardRef(Tabs))
                                  aria-label="tabs"
                                  indicatorColor="secondary"
                                  onChange={[Function]}
                                  textColor="primary"
                                  value={0}
                                  variant="fullWidth"
                                >
                                  <ForwardRef(Tabs)
                                    aria-label="tabs"
                                    classes={
                                      Object {
                                        "centered": "MuiTabs-centered",
                                        "fixed": "MuiTabs-fixed",
                                        "flexContainer": "MuiTabs-flexContainer",
                                        "flexContainerVertical": "MuiTabs-flexContainerVertical",
                                        "indicator": "MuiTabs-indicator",
                                        "root": "MuiTabs-root",
                                        "scrollButtons": "MuiTabs-scrollButtons",
                                        "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                        "scrollable": "MuiTabs-scrollable",
                                        "scroller": "MuiTabs-scroller",
                                        "vertical": "MuiTabs-vertical",
                                      }
                                    }
                                    indicatorColor="secondary"
                                    onChange={[Function]}
                                    textColor="primary"
                                    value={0}
                                    variant="fullWidth"
                                  >
                                    <div
                                      className="MuiTabs-root"
                                    >
                                      <div
                                        className="MuiTabs-scroller MuiTabs-fixed"
                                        onScroll={[Function]}
                                        style={
                                          Object {
                                            "marginBottom": null,
                                            "overflow": "hidden",
                                          }
                                        }
                                      >
                                        <div
                                          aria-label="tabs"
                                          className="MuiTabs-flexContainer"
                                          onKeyDown={[Function]}
                                          role="tablist"
                                        >
                                          <WithStyles(ForwardRef(Tab))
                                            aria-controls="full-width-tabpanel-0"
                                            fullWidth={true}
                                            id="full-width-tab-0"
                                            indicator={false}
                                            key=".0"
                                            label="Mentors (#)"
                                            onChange={[Function]}
                                            selected={true}
                                            textColor="primary"
                                            value={0}
                                          >
                                            <ForwardRef(Tab)
                                              aria-controls="full-width-tabpanel-0"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "fullWidth": "MuiTab-fullWidth",
                                                  "labelIcon": "MuiTab-labelIcon",
                                                  "root": "MuiTab-root",
                                                  "selected": "Mui-selected",
                                                  "textColorInherit": "MuiTab-textColorInherit",
                                                  "textColorPrimary": "MuiTab-textColorPrimary",
                                                  "textColorSecondary": "MuiTab-textColorSecondary",
                                                  "wrapped": "MuiTab-wrapped",
                                                  "wrapper": "MuiTab-wrapper",
                                                }
                                              }
                                              fullWidth={true}
                                              id="full-width-tab-0"
                                              indicator={false}
                                              label="Mentors (#)"
                                              onChange={[Function]}
                                              selected={true}
                                              textColor="primary"
                                              value={0}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-controls="full-width-tabpanel-0"
                                                aria-selected={true}
                                                className="MuiTab-root MuiTab-textColorPrimary Mui-selected MuiTab-fullWidth"
                                                disabled={false}
                                                focusRipple={true}
                                                id="full-width-tab-0"
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                role="tab"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-controls="full-width-tabpanel-0"
                                                  aria-selected={true}
                                                  className="MuiTab-root MuiTab-textColorPrimary Mui-selected MuiTab-fullWidth"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="full-width-tab-0"
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  role="tab"
                                                  tabIndex={0}
                                                >
                                                  <button
                                                    aria-controls="full-width-tabpanel-0"
                                                    aria-selected={true}
                                                    className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected MuiTab-fullWidth"
                                                    disabled={false}
                                                    id="full-width-tab-0"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="tab"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiTab-wrapper"
                                                    >
                                                      Mentors (#)
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Tab)>
                                          </WithStyles(ForwardRef(Tab))>
                                          <WithStyles(ForwardRef(Tab))
                                            aria-controls="full-width-tabpanel-1"
                                            fullWidth={true}
                                            id="full-width-tab-1"
                                            indicator={false}
                                            key=".1"
                                            label="Mentees (#)"
                                            onChange={[Function]}
                                            selected={false}
                                            textColor="primary"
                                            value={1}
                                          >
                                            <ForwardRef(Tab)
                                              aria-controls="full-width-tabpanel-1"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "fullWidth": "MuiTab-fullWidth",
                                                  "labelIcon": "MuiTab-labelIcon",
                                                  "root": "MuiTab-root",
                                                  "selected": "Mui-selected",
                                                  "textColorInherit": "MuiTab-textColorInherit",
                                                  "textColorPrimary": "MuiTab-textColorPrimary",
                                                  "textColorSecondary": "MuiTab-textColorSecondary",
                                                  "wrapped": "MuiTab-wrapped",
                                                  "wrapper": "MuiTab-wrapper",
                                                }
                                              }
                                              fullWidth={true}
                                              id="full-width-tab-1"
                                              indicator={false}
                                              label="Mentees (#)"
                                              onChange={[Function]}
                                              selected={false}
                                              textColor="primary"
                                              value={1}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-controls="full-width-tabpanel-1"
                                                aria-selected={false}
                                                className="MuiTab-root MuiTab-textColorPrimary MuiTab-fullWidth"
                                                disabled={false}
                                                focusRipple={true}
                                                id="full-width-tab-1"
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                role="tab"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-controls="full-width-tabpanel-1"
                                                  aria-selected={false}
                                                  className="MuiTab-root MuiTab-textColorPrimary MuiTab-fullWidth"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="full-width-tab-1"
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  role="tab"
                                                  tabIndex={-1}
                                                >
                                                  <button
                                                    aria-controls="full-width-tabpanel-1"
                                                    aria-selected={false}
                                                    className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary MuiTab-fullWidth"
                                                    disabled={false}
                                                    id="full-width-tab-1"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="tab"
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiTab-wrapper"
                                                    >
                                                      Mentees (#)
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Tab)>
                                          </WithStyles(ForwardRef(Tab))>
                                        </div>
                                        <WithStyles(ForwardRef(TabIndicator))
                                          className="MuiTabs-indicator"
                                          color="secondary"
                                          orientation="horizontal"
                                          style={
                                            Object {
                                              "left": 0,
                                              "width": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TabIndicator)
                                            className="MuiTabs-indicator"
                                            classes={
                                              Object {
                                                "colorPrimary": "PrivateTabIndicator-colorPrimary-12",
                                                "colorSecondary": "PrivateTabIndicator-colorSecondary-13",
                                                "root": "PrivateTabIndicator-root-11",
                                                "vertical": "PrivateTabIndicator-vertical-14",
                                              }
                                            }
                                            color="secondary"
                                            orientation="horizontal"
                                            style={
                                              Object {
                                                "left": 0,
                                                "width": 0,
                                              }
                                            }
                                          >
                                            <span
                                              className="PrivateTabIndicator-root-11 PrivateTabIndicator-colorSecondary-13 MuiTabs-indicator"
                                              style={
                                                Object {
                                                  "left": 0,
                                                  "width": 0,
                                                }
                                              }
                                            />
                                          </ForwardRef(TabIndicator)>
                                        </WithStyles(ForwardRef(TabIndicator))>
                                      </div>
                                    </div>
                                  </ForwardRef(Tabs)>
                                </WithStyles(ForwardRef(Tabs))>
                              </header>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </ForwardRef(AppBar)>
                      </WithStyles(ForwardRef(AppBar))>
                      <ReactSwipableView
                        animateHeight={false}
                        animateTransitions={true}
                        axis="x"
                        disableLazyLoading={false}
                        disabled={false}
                        enableMouseEvents={false}
                        hysteresis={0.6}
                        ignoreNativeScroll={false}
                        index={0}
                        onChangeIndex={[Function]}
                        resistance={false}
                        springConfig={
                          Object {
                            "delay": "0s",
                            "duration": "0.35s",
                            "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                          }
                        }
                        threshold={5}
                      >
                        <div
                          onScroll={[Function]}
                          onTouchEnd={[Function]}
                          onTouchStart={[Function]}
                          style={
                            Object {
                              "overflowX": "hidden",
                            }
                          }
                        >
                          <div
                            className="react-swipeable-view-container"
                            style={
                              Object {
                                "WebkitFlexDirection": "row",
                                "WebkitTransition": "all 0s ease 0s",
                                "direction": "ltr",
                                "display": "flex",
                                "flexDirection": "row",
                                "height": null,
                                "transition": "all 0s ease 0s",
                                "willChange": "transform",
                              }
                            }
                          >
                            <div
                              aria-hidden={false}
                              data-swipeable="true"
                              key=".0"
                              style={
                                Object {
                                  "WebkitFlexShrink": 0,
                                  "flexShrink": 0,
                                  "overflow": "auto",
                                  "width": "100%",
                                }
                              }
                            >
                              <TabPanel
                                dir="ltr"
                                index={0}
                                value={0}
                              >
                                <div
                                  aria-labelledby="full-width-tab-0"
                                  dir="ltr"
                                  hidden={false}
                                  id="full-width-tabpanel-0"
                                  role="tabpanel"
                                >
                                  <Styled(MuiBox)
                                    p={2}
                                  >
                                    <div
                                      className="MuiBox-root MuiBox-root-15"
                                    >
                                      <WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                        >
                                          <p
                                            className="MuiTypography-root MuiTypography-body1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="text"
                                            >
                                              <ForwardRef(Typography)
                                                className="text"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                              >
                                                <p
                                                  className="MuiTypography-root text MuiTypography-body1"
                                                >
                                                  Mentor cards go here
                                                </p>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </p>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </Styled(MuiBox)>
                                </div>
                              </TabPanel>
                            </div>
                          </div>
                        </div>
                      </ReactSwipableView>
                    </div>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </div>
          </div>
        </Connections>
        <ConnectionRequests>
          <div
            className="connection-req"
            data-test="connections"
          >
            <div
              data-test="second-wrapper"
            >
              <WithStyles(ForwardRef(Paper))
                className="paper"
                elevation={1}
              >
                <ForwardRef(Paper)
                  className="paper"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={1}
                >
                  <div
                    className="MuiPaper-root paper MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <h1
                      className="container-header"
                      data-test="my-connections"
                    >
                      Connection Requests (#)
                    </h1>
                    <p
                      className="container-body"
                    >
                      Cards go here
                    </p>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </div>
          </div>
        </ConnectionRequests>
        <RecommendedConnections>
          <div
            className="rec-connect"
            data-test="connections"
          >
            <div
              data-test="second-wrapper"
            >
              <WithStyles(ForwardRef(Paper))
                className="paper"
                elevation={1}
              >
                <ForwardRef(Paper)
                  className="paper"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={1}
                >
                  <div
                    className="MuiPaper-root paper MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <h1
                      className="container-header"
                      data-test="my-connections"
                    >
                      Recommended Connections
                    </h1>
                    <p
                      className="container-body"
                    >
                      Cards go here
                    </p>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </div>
          </div>
        </RecommendedConnections>
        <Footer
          value={0}
        >
          <div>
            <WithStyles(ForwardRef(Menu))
              anchorEl={null}
              id="simple-menu"
              keepMounted={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Menu)
                anchorEl={null}
                classes={
                  Object {
                    "list": "MuiMenu-list",
                    "paper": "MuiMenu-paper",
                  }
                }
                id="simple-menu"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <WithStyles(ForwardRef(Popover))
                  PaperProps={
                    Object {
                      "classes": Object {
                        "root": "MuiMenu-paper",
                      },
                    }
                  }
                  anchorEl={null}
                  anchorOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  getContentAnchorEl={[Function]}
                  id="simple-menu"
                  keepMounted={true}
                  onClose={[Function]}
                  onEntering={[Function]}
                  open={false}
                  transformOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  transitionDuration="auto"
                >
                  <ForwardRef(Popover)
                    PaperProps={
                      Object {
                        "classes": Object {
                          "root": "MuiMenu-paper",
                        },
                      }
                    }
                    anchorEl={null}
                    anchorOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                    classes={
                      Object {
                        "paper": "MuiPopover-paper",
                        "root": "MuiPopover-root",
                      }
                    }
                    getContentAnchorEl={[Function]}
                    id="simple-menu"
                    keepMounted={true}
                    onClose={[Function]}
                    onEntering={[Function]}
                    open={false}
                    transformOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                    transitionDuration="auto"
                  >
                    <ForwardRef(Modal)
                      BackdropProps={
                        Object {
                          "invisible": true,
                        }
                      }
                      className="MuiPopover-root"
                      id="simple-menu"
                      keepMounted={true}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Portal)
                        disablePortal={false}
                      >
                        <Portal
                          containerInfo={
                            <body>
                              <div
                                aria-hidden="true"
                                class="MuiPopover-root"
                                id="simple-menu"
                                role="presentation"
                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabindex="0"
                                />
                                <div
                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                  tabindex="-1"
                                >
                                  <ul
                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                    role="menu"
                                    tabindex="-1"
                                  >
                                    <li
                                      aria-disabled="false"
                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      role="menuitem"
                                      tabindex="0"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
                                        />
                                      </svg>
                                      <div>
                                         Dark Mode
                                      </div>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </li>
                                    <li
                                      aria-disabled="false"
                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      role="menuitem"
                                      tabindex="-1"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                        />
                                      </svg>
                                      <div>
                                         Log Out
                                      </div>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </li>
                                  </ul>
                                </div>
                                <div
                                  data-test="sentinelEnd"
                                  tabindex="0"
                                />
                              </div>
                            </body>
                          }
                        >
                          <div
                            className="MuiPopover-root"
                            id="simple-menu"
                            onKeyDown={[Function]}
                            role="presentation"
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                                "visibility": "hidden",
                                "zIndex": 1300,
                              }
                            }
                          >
                            <ForwardRef(SimpleBackdrop)
                              invisible={true}
                              onClick={[Function]}
                              open={false}
                            />
                            <Unstable_TrapFocus
                              disableAutoFocus={false}
                              disableEnforceFocus={false}
                              disableRestoreFocus={false}
                              getDoc={[Function]}
                              isEnabled={[Function]}
                              open={false}
                            >
                              <div
                                data-test="sentinelStart"
                                tabIndex={0}
                              />
                              <ForwardRef(Grow)
                                appear={true}
                                in={false}
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                tabIndex="-1"
                                timeout="auto"
                              >
                                <Transition
                                  addEndListener={[Function]}
                                  appear={true}
                                  enter={true}
                                  exit={true}
                                  in={false}
                                  mountOnEnter={false}
                                  onEnter={[Function]}
                                  onEntered={[Function]}
                                  onEntering={[Function]}
                                  onExit={[Function]}
                                  onExited={[Function]}
                                  onExiting={[Function]}
                                  tabIndex="-1"
                                  timeout={null}
                                  unmountOnExit={false}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiPopover-paper"
                                    classes={
                                      Object {
                                        "root": "MuiMenu-paper",
                                      }
                                    }
                                    elevation={8}
                                    style={
                                      Object {
                                        "opacity": 0,
                                        "transform": "scale(0.75, 0.5625)",
                                        "visibility": "hidden",
                                      }
                                    }
                                    tabIndex="-1"
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiPopover-paper"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root MuiMenu-paper",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={8}
                                      style={
                                        Object {
                                          "opacity": 0,
                                          "transform": "scale(0.75, 0.5625)",
                                          "visibility": "hidden",
                                        }
                                      }
                                      tabIndex="-1"
                                    >
                                      <div
                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                        style={
                                          Object {
                                            "opacity": 0,
                                            "transform": "scale(0.75, 0.5625)",
                                            "visibility": "hidden",
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <ForwardRef(MenuList)
                                          actions={
                                            Object {
                                              "current": Object {
                                                "adjustStyleForScrollbar": [Function],
                                              },
                                            }
                                          }
                                          autoFocus={false}
                                          autoFocusItem={false}
                                          className="MuiMenu-list"
                                          onKeyDown={[Function]}
                                          variant="selectedMenu"
                                        >
                                          <WithStyles(ForwardRef(List))
                                            className="MuiMenu-list"
                                            onKeyDown={[Function]}
                                            role="menu"
                                            tabIndex={-1}
                                          >
                                            <ForwardRef(List)
                                              className="MuiMenu-list"
                                              classes={
                                                Object {
                                                  "dense": "MuiList-dense",
                                                  "padding": "MuiList-padding",
                                                  "root": "MuiList-root",
                                                  "subheader": "MuiList-subheader",
                                                }
                                              }
                                              onKeyDown={[Function]}
                                              role="menu"
                                              tabIndex={-1}
                                            >
                                              <ul
                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                onKeyDown={[Function]}
                                                role="menu"
                                                tabIndex={-1}
                                              >
                                                <WithStyles(ForwardRef(MenuItem))
                                                  key=".$.0"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(MenuItem)
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                        "gutters": "MuiMenuItem-gutters",
                                                        "root": "MuiMenuItem-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "dense": "MuiMenuItem-dense",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component="li"
                                                        disableGutters={false}
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={0}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="li"
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            role="menuitem"
                                                            tabIndex={0}
                                                          >
                                                            <li
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="menuitem"
                                                              tabIndex={0}
                                                            >
                                                              <ForwardRef
                                                                key=".0"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef>
                                                              <div
                                                                key=".1"
                                                              >
                                                                 Dark Mode
                                                              </div>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </li>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                  </ForwardRef(MenuItem)>
                                                </WithStyles(ForwardRef(MenuItem))>
                                                <WithStyles(ForwardRef(MenuItem))
                                                  key=".$.1"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(MenuItem)
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                        "gutters": "MuiMenuItem-gutters",
                                                        "root": "MuiMenuItem-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "dense": "MuiMenuItem-dense",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component="li"
                                                        disableGutters={false}
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={-1}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="li"
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            role="menuitem"
                                                            tabIndex={-1}
                                                          >
                                                            <li
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="menuitem"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef
                                                                key=".0"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef>
                                                              <div
                                                                key=".1"
                                                              >
                                                                 Log Out
                                                              </div>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </li>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                  </ForwardRef(MenuItem)>
                                                </WithStyles(ForwardRef(MenuItem))>
                                              </ul>
                                            </ForwardRef(List)>
                                          </WithStyles(ForwardRef(List))>
                                        </ForwardRef(MenuList)>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </Transition>
                              </ForwardRef(Grow)>
                              <div
                                data-test="sentinelEnd"
                                tabIndex={0}
                              />
                            </Unstable_TrapFocus>
                          </div>
                        </Portal>
                      </ForwardRef(Portal)>
                    </ForwardRef(Modal)>
                  </ForwardRef(Popover)>
                </WithStyles(ForwardRef(Popover))>
              </ForwardRef(Menu)>
            </WithStyles(ForwardRef(Menu))>
            <WithStyles(ForwardRef(BottomNavigation))
              className="makeStyles-root-16"
              showLabels={true}
              value={0}
            >
              <ForwardRef(BottomNavigation)
                className="makeStyles-root-16"
                classes={
                  Object {
                    "root": "MuiBottomNavigation-root",
                  }
                }
                showLabels={true}
                value={0}
              >
                <div
                  className="MuiBottomNavigation-root makeStyles-root-16"
                >
                  <WithStyles(ForwardRef(BottomNavigationAction))
                    className="icon"
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "Link",
                        "propTypes": Object {
                          "innerRef": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    icon={<UNDEFINED />}
                    key=".0"
                    label="Home"
                    selected={true}
                    showLabel={true}
                    to="/home"
                    value={0}
                  >
                    <ForwardRef(BottomNavigationAction)
                      className="icon"
                      classes={
                        Object {
                          "iconOnly": "MuiBottomNavigationAction-iconOnly",
                          "label": "MuiBottomNavigationAction-label",
                          "root": "MuiBottomNavigationAction-root",
                          "selected": "Mui-selected",
                          "wrapper": "MuiBottomNavigationAction-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      icon={<UNDEFINED />}
                      label="Home"
                      selected={true}
                      showLabel={true}
                      to="/home"
                      value={0}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiBottomNavigationAction-root icon Mui-selected"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Link",
                            "propTypes": Object {
                              "innerRef": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        focusRipple={true}
                        onClick={[Function]}
                        to="/home"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiBottomNavigationAction-root icon Mui-selected"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "Link",
                              "propTypes": Object {
                                "innerRef": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          focusRipple={true}
                          onClick={[Function]}
                          to="/home"
                        >
                          <Link
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiBottomNavigationAction-root icon Mui-selected"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                            to="/home"
                          >
                            <LinkAnchor
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiBottomNavigationAction-root icon Mui-selected"
                              href="/home"
                              navigate={[Function]}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <a
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiBottomNavigationAction-root icon Mui-selected"
                                href="/home"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <span
                                  className="MuiBottomNavigationAction-wrapper"
                                >
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                  <span
                                    className="MuiBottomNavigationAction-label Mui-selected"
                                  >
                                    Home
                                  </span>
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(BottomNavigationAction)>
                  </WithStyles(ForwardRef(BottomNavigationAction))>
                  <WithStyles(ForwardRef(BottomNavigationAction))
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "Link",
                        "propTypes": Object {
                          "innerRef": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    icon={<UNDEFINED />}
                    key=".1"
                    label="Profile"
                    selected={false}
                    showLabel={true}
                    to="/profile"
                    value={1}
                  >
                    <ForwardRef(BottomNavigationAction)
                      classes={
                        Object {
                          "iconOnly": "MuiBottomNavigationAction-iconOnly",
                          "label": "MuiBottomNavigationAction-label",
                          "root": "MuiBottomNavigationAction-root",
                          "selected": "Mui-selected",
                          "wrapper": "MuiBottomNavigationAction-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      icon={<UNDEFINED />}
                      label="Profile"
                      selected={false}
                      showLabel={true}
                      to="/profile"
                      value={1}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiBottomNavigationAction-root"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Link",
                            "propTypes": Object {
                              "innerRef": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        focusRipple={true}
                        onClick={[Function]}
                        to="/profile"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiBottomNavigationAction-root"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "Link",
                              "propTypes": Object {
                                "innerRef": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          focusRipple={true}
                          onClick={[Function]}
                          to="/profile"
                        >
                          <Link
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiBottomNavigationAction-root"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                            to="/profile"
                          >
                            <LinkAnchor
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiBottomNavigationAction-root"
                              href="/profile"
                              navigate={[Function]}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <a
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiBottomNavigationAction-root"
                                href="/profile"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <span
                                  className="MuiBottomNavigationAction-wrapper"
                                >
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                  <span
                                    className="MuiBottomNavigationAction-label"
                                  >
                                    Profile
                                  </span>
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(BottomNavigationAction)>
                  </WithStyles(ForwardRef(BottomNavigationAction))>
                  <WithStyles(ForwardRef(BottomNavigationAction))
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "Link",
                        "propTypes": Object {
                          "innerRef": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    icon={<UNDEFINED />}
                    key=".2"
                    label="Search"
                    selected={false}
                    showLabel={true}
                    to="/search"
                    value={2}
                  >
                    <ForwardRef(BottomNavigationAction)
                      classes={
                        Object {
                          "iconOnly": "MuiBottomNavigationAction-iconOnly",
                          "label": "MuiBottomNavigationAction-label",
                          "root": "MuiBottomNavigationAction-root",
                          "selected": "Mui-selected",
                          "wrapper": "MuiBottomNavigationAction-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      icon={<UNDEFINED />}
                      label="Search"
                      selected={false}
                      showLabel={true}
                      to="/search"
                      value={2}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiBottomNavigationAction-root"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Link",
                            "propTypes": Object {
                              "innerRef": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        focusRipple={true}
                        onClick={[Function]}
                        to="/search"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiBottomNavigationAction-root"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "Link",
                              "propTypes": Object {
                                "innerRef": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          focusRipple={true}
                          onClick={[Function]}
                          to="/search"
                        >
                          <Link
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiBottomNavigationAction-root"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                            to="/search"
                          >
                            <LinkAnchor
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiBottomNavigationAction-root"
                              href="/search"
                              navigate={[Function]}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <a
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiBottomNavigationAction-root"
                                href="/search"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <span
                                  className="MuiBottomNavigationAction-wrapper"
                                >
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                  <span
                                    className="MuiBottomNavigationAction-label"
                                  >
                                    Search
                                  </span>
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(BottomNavigationAction)>
                  </WithStyles(ForwardRef(BottomNavigationAction))>
                  <WithStyles(ForwardRef(BottomNavigationAction))
                    icon={<UNDEFINED />}
                    key=".3"
                    label="Settings"
                    onClick={[Function]}
                    selected={false}
                    showLabel={true}
                    value={3}
                  >
                    <ForwardRef(BottomNavigationAction)
                      classes={
                        Object {
                          "iconOnly": "MuiBottomNavigationAction-iconOnly",
                          "label": "MuiBottomNavigationAction-label",
                          "root": "MuiBottomNavigationAction-root",
                          "selected": "Mui-selected",
                          "wrapper": "MuiBottomNavigationAction-wrapper",
                        }
                      }
                      icon={<UNDEFINED />}
                      label="Settings"
                      onClick={[Function]}
                      selected={false}
                      showLabel={true}
                      value={3}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiBottomNavigationAction-root"
                        focusRipple={true}
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiBottomNavigationAction-root"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <button
                            className="MuiButtonBase-root MuiBottomNavigationAction-root"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiBottomNavigationAction-wrapper"
                            >
                              <ForwardRef>
                                <WithStyles(ForwardRef(SvgIcon))>
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z"
                                        transform="scale(1.2, 1.2)"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                              <span
                                className="MuiBottomNavigationAction-label"
                              >
                                Settings
                              </span>
                            </span>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(BottomNavigationAction)>
                  </WithStyles(ForwardRef(BottomNavigationAction))>
                </div>
              </ForwardRef(BottomNavigation)>
            </WithStyles(ForwardRef(BottomNavigation))>
          </div>
        </Footer>
      </div>
    </Home>
  </Router>
</MemoryRouter>
`;
